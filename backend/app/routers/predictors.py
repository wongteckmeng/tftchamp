from enum import Enum
import io
import pickle
from fastapi import APIRouter, Body, Request, Response, HTTPException, Depends, Query, status
from fastapi.responses import FileResponse, StreamingResponse
from models.predictor import Predictor, PredictionInput, PredictionOutput, MDIOutput, get_model
from models.match import Match


responses = {
    404: {"description": "Item not found"},
    302: {"description": "The item was moved"},
    403: {"description": "Not enough privileges"},
}


class Platform(str, Enum):
    euw1 = "euw1",
    br1 = "br1",
    eun1 = "eun1",
    jp1 = "jp1",
    kr = "kr",
    la1 = "la1",
    la2 = "la2",
    na1 = "na1",
    oc1 = "oc1",
    tr1 = "tr1",
    ru = "ru"


class League(str, Enum):
    challengers = "challengers",
    grandmasters = "grandmasters",
    masters = "masters",
    diamonds = "diamonds"


model_router = APIRouter()


@ model_router.on_event("startup")
async def startup():
    """Initialize the tftchamp pipeline"""
    # get_model().load_model()


@ model_router.get("/prediction", response_model=MDIOutput)
async def models(
        model: Predictor = Depends(get_model)) -> MDIOutput:
    output: MDIOutput = model.get_mdi()
    return output


@ model_router.post("/prediction", response_model=PredictionOutput)
async def prediction(
        request: Match,
        model: Predictor = Depends(get_model)) -> PredictionOutput:
    output: PredictionOutput = model.predict(request)
    return output


@model_router.get("/prediction/{id}", response_description="Get a single match by id",
                  # Set what the media type will be in the autogenerated OpenAPI specification.
                  # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
                  responses={
                      **responses,
                      200: {
                          "content": {"image/png": {}},
                          "description": "Return the JSON item or an image.",
                      }
                  },
                  # Prevent FastAPI from adding "application/json" as an additional
                  # response media type in the autogenerated OpenAPI specification.
                  # https://github.com/tiangolo/fastapi/issues/3258
                  response_class=Response)
async def find_image(id: str, request: Request, platform: Platform = 'oc1', league: League = 'challengers'):
    # print(request.app.config)
    if (binary := await request.app.database[f"{platform}_{league}_12.15.458.1416_2022-08-10_binary"].find_one({"_id": id})) is not None:
        im = pickle.loads(binary["image"])
        return StreamingResponse(content=im, media_type="image/png")

    raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,
                        detail=f"Match with ID {id} not found")
